name: Backend CI/CD

on:
  workflow_call:

env:
  # Enable BuildKit for faster Docker builds
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  JWT_SECRET: ${{ secrets.JWT_SECRET }}

jobs:
  backend-test:
    name: Test
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Print Java version
        run: |
          cd backend
          mvn --version

      - name: Build and run unit tests
        run: |
          cd backend
          mvn -f pom.xml clean test

      - name: Create coverage report
        run: |
          cd backend
          mvn jacoco:report

      - name: Upload code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/target/site/jacoco/*
          retention-days: 7

  backend-build:
    name: Build Image
    runs-on: ubuntu-latest
    needs: [backend-test]
    if: |
      github.ref == 'refs/heads/main' ||
      github.event_name == 'pull_request'
    outputs:
      image_built: ${{ steps.build_image.outputs.success }}
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Print Java version
        run: |
          cd backend
          mvn --version

      - name: Build project
        run: |
          cd backend
          mvn clean package -Dmaven.test.skip=true -T 1C

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Build Docker image
        id: build_image
        uses: docker/build-push-action@v6
        with:
          context: backend
          push: false
          load: true
          tags: |
            concertjournalbackend:build
          platforms: linux/amd64
          cache-from: type=registry,ref=registry.wielandseb.synology.me/concertjournalbackend:cache
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            
      - name: Save Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker save concertjournalbackend:build | gzip > backend-image.tar.gz
          echo "Image saved as backend-image.tar.gz"
          echo "success=true" >> $GITHUB_OUTPUT
          
      - name: Upload image artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: backend-image
          path: backend-image.tar.gz
          retention-days: 1

      - name: Scan Docker image
        if: github.ref == 'refs/heads/main'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: concertjournalbackend:build
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'